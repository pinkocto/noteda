---
title: 변수선택 실습
author: JiyunLim
date: "05/03/2023"
---

# 변수선택

```{r}
dt <- data.frame(
 x1 = c(7,1,11,11,7,11,3,1,2,21,1,11,10),
 x2 = c(26,29,56,31,52,55,71,31,54,47,40,66,68),
 x3 = c(6,15,8,8,6,9,17,22,18,4,23,9,8),
 x4 = c(60,52,20,47,33,22,6,44,22,26,34,12,12),
 y = c(78.5,74.3,104.3,87.6,95.9,109.2,102.7,72.5,93.1,115.9,83.8,113.3,109.4)
)
```

```{r}
pairs(dt, pch=16)
```

-   $x2$와 $x3$ 의 선형관계가 크게 나타난다.

```{r}
cor(dt)
```

### Full Model: $y=\beta_0 + \beta_1x_1 + \beta_2x_2 + \beta_3x_3+\beta_4x_4 + \epsilon$

```{r}
m <- lm(y~., dt)  ## FM
summary(m)
```

-   모형은 매우 유의하고 $R^2_{Adj}$ 도 매우 높지만 개별 회귀계수가 유의한 것은 하나도 없다. 이러한 문제가 발생하는 이유는 ***"다중공선성"*** 때문이다. 다중공선성이 있기 때문에 위의 모델을 그대로 사용할 수 없다.

-   변수선택 시도!

## 후진제거법

> 가장 유의하지 않을 것을 부분 F-test를 통해 찾는다.

$H_0: \beta_1 = 0$

```{r}
summary(m)
```

![](%EC%82%AC%EC%A7%84/%EB%B3%80%EC%88%98%EC%84%A0%ED%83%9D(%ED%9B%84%EC%A7%84%EC%A0%9C%EA%B1%B0).png){fig-align="center"}

### drop1

```{r}
drop1(m, test='F')  # x3제거
```

-   $x1$ 을 제거했을때, $x2$를 제거했을 때, $x3$ 를 제거했을 때, $x4$ 를 제거했을 때의 결과이다.

-   F통계량 값이 작으면 작을수록 의미가 없다는 뜻. ($x3$ 제거)

```{r}
m1 <- update(m, ~. -x3)
summary(m1) 
```

-   $x3$ 가 빠지게 되면서 $x1$ 입장에서 다중공선성 문제가 어느정도 해결되었다.

### drop2

```{r}
drop1(m1, test='F')
```

```{r}
m2 <- update(m1, ~. -x4)
summary(m2)
```

### STOP!

```{r}
drop1(m2, test='F')
```

-   $x1, x2$ 모두 통계적으로 유의하므로 제거하면 안된다.

## 전진선택법

> 절편만 있는 모형부터 시작!

Start model: $y=\beta_0 + \epsilon$

```{r}
m0 = lm(y ~ 1, data=dt) ## start model
```

### add1

```{r}
add1(m0,
     scope = y~ x1 + x2 + x3 + x4,
     test= 'F')
```

```{r}
m1 <- update(m0, ~ . + x4)
summary(m1)
```

### add2

```{r}
add1(m1,
     scope = y~ x1+x2+x3+x4,
     test= 'F') ## x1 추가
```

```{r}
m2 <- update(m1, ~ . +x1)
summary(m2)
```

### STOP

```{r}
add1(m2,
     scope=y~ x1 + x2 + x3 + x4,
     test = "F") ## stop
```

-   기준을 $0.05$ 로 잡았을 때 $x2$ 는 모형에 포함될 수 없다.

-   STOP! 최종모형은 $x1, x4$ 를 선택한 모형이 된다.

-   유의수준을 \$0.01\$로 한다면 $x3$ 을 포함시키면 된다.

## 단계적 선택법

> add, drop을 번갈아 가면서 하는 것.

```{r}
m0 = lm(y~1, data=dt) ## start model (절편)
```

```{r}
add1(m0,
     scope = y ~ x1 + x2 + x3 + x4,
     test= "F") ## x4추가
```

```{r}
m1 <- update(m0, ~. + x4)
summary(m1)
```

### $x4$ 가 선택된 모형부터 시작!

### add1

```{r}
add1(m1,
     scope= y~ x1 + x2 + x3 + x4,
     test = "F") ## x1 추가
```

-   F값이 제일 크면서 유의한 $x1$ 추가.

```{r}
m2 <- update(m1,~. + x1)
```

### drop1

```{r}
drop1(m2, test = 'F') ## 제거없음.
```

### add2

```{r}
## 유의수준 = 0.1
add1(m2,
     scope = y ~ x1 + x2 + x3 + x4,
     test=  "F") ## x2 추가
```

```{r}
m3 <- update(m2, ~. +x2)
summary(m3)
```

### drop2

```{r}
drop1(m3, test='F') ## x4제거
```

-   이전에 추가됐던 $x2$ 는 보지 않고 $x1, x4$ 만 보면된다.

-   F값이 작고 유의확률이 큰 $x4$ 제거.

```{r}
m4 <- update(m3, ~. -x4)
summary(m4)
```

### STOP!

```{r}
add1(m4,
     scope = y~ x1 + x2 + x3 + x4,
     test = 'F') # stop
```

# AIC를 이용한 변수 선택법

## Backward - AIC

> AIC, BIC는 작을수록 좋음.

```{r}
model_back = stats::step(m, direction = 'backward')
summary(model_back)
```

-   최종적으로 $x1,x2,x4$ 가 뽑힌 모형이 된다.

-   모형 자체는 유의하지만 개별 회귀계수의 p-value 를 보면 에매하게 유의하다. ($x2$ 는 에매하고, $x4$ 는 유의하지 않다.)

::: {.callout-warning appearance="simple"}
## Error in length(obj): class name too long in 'length'

`step` 함수 사용시 위와 같은 에러메세지가 난다면,

stats::step() 이런식으로 지정해주면 된다. ( package conflict )
:::

## Forward - AIC

```{r}
model_forward = stats::step(
  m0,
  scope = y~ x1+x2+x3+x4,
  direction = 'forward')
summary(model_forward)
```

-   절편만 포함된 모형이 start model! ($AIC=71.44$)

-   $x4$ 를 추가했을 때 AIC가 가장 작아졌으므로 $x4$ 추가.

-   $x4$ 가 추가된 상태에서 나머지 변수들 추가해보기

-   $x1$ 을 추가했을 때, AIC가 가장작아지므로 $x1$ 추가.

-   $x1, x4$ 가 있는 상태에서 $x2, x3$ 를 추가해본다.

-   $x2$ 를 넣었을 때 AIC가 가장 작아지므로 $x2$ 추가.

-   $x3$ 를 넣어도 좋아지지 않으므로 최종적으로 $x1,x2, x4$ 선택.

## Step-AIC

> direction = 'both'

```{r}
model_step = stats::step(
  m0,
  scope = y ~ x1 + x2 + x3 + x4,
  direction = 'both')
summary(model_step)
```

-   최종모형으로는 $x1,x2,x4$ 가 뽑히게 된다.

# 자동차 연비 분석

```{r}
mcor <- round(cor(mtcars),2)
mcor
```

$y$와 상관관계가 높은 애들도 많지만 설명변수들끼리 상관관계가 높은 애들도 많다. (다중공선성)\

```{r}
fit <- lm(mpg~., data=mtcars)
summary(fit)
```

-   모형자체는 유의하게 나왔지만 개별 회귀계수는 모두 유의하지 않게 나왔다. $\to$ 다중공선성 때문!
-   그럼 앞에서 배웠던 drop, add 이용해서 계속 해야할까? $\to$ 이것은 수동적인 방법
-   보통 2가지 사용하는데 1. `step` 함수이용 2. `regsubsets` 보통 2번째 방법을 많이 사용한다.
-   `regsubsets` : regression subset들을 가지고 보겠다라고 생각.

```{r,message=FALSE}
library(leaps)
```

```{r}
fit <- regsubsets(mpg ~., data=mtcars, nbest=1, nvmax=9,
                  # method = c('exhuastive', 'backward', 'forward', 'seqrep')
                  method = 'exhaustive'
                  )
```

::: {.callout-note appearance="simple"}
## regsubsets

    method=c("exhaustive","backward", "forward", "seqrep")

    순서대로 1. 모든 가능한 회귀, 2.후진제거, 3. 전진선택, 4. stepwise
:::

```{r}
summary(fit)
```

-   꼭 넣고 싶은 변수가 있다 Forced in , 꼭 빼고 싶은 변수가 있다 Forced out

-   우리는 옵션을 준 것이 하나도 없기때문에 다 FALSE로 되어있음.

-   "\*" 의 의미?

    -   예를 들어, 2번째 `cyl` 와 `wt` 에 "\*" 표시가 되어있다. 이 말은

    -   $_{10}C_2 = \frac{10\times 9}{2}=45$ 개의 조합으로 lm을 다 돌린 후 $R^2$ 를 비교하여 제일 좋은 $R^2$ 모형을 찾아준다. 즉, 변수가 2개인 모형 중에서는 `cyl` 과 `wt` 가 들어간 모델이 제일 좋은 모델이라는 것!

    -   변수를 1개를 쓴 모델 중에는 `wt` 를 쓴 모델이 제일 좋았다.

    -   3개를 쓴 모델 중에는 `wt`, `qsec` , `am` 이 들어간 모델이 제일 좋았다.

그렇다면 10개 중에서는 어떤 모델이 가장 좋은가?

```{r, warning=FALSE}
with(summary(fit),
     round(cbind(which, rss, rsq, adjr2, cp, bic), 3))
```

-   각 각 어떤 변수를 썼을 때 좋은지 나타나고, measure가 나옴.

-   SSE는 복잡한 모델일수록 작아진다. $\to$ 감소하는데 둔화되는 지점을 찾자.

![](%EC%82%AC%EC%A7%84/%EB%B3%80%EC%88%98%EC%84%A0%ED%83%9D(%EA%B2%B0%EA%B3%BC%EB%B9%84%EA%B5%90).png)

-   변수를 3개정도 선택하면 좋을 것 같다.

-   다른 책의 경우 종합적으로 판단해서 4개를 골랐다. 판단을 했을 때 결과는 주관적이다.

-   똑같은 표라도 사람마다 다른 결과를 내릴 수 있다. (3개정도 쓰면 적당할듯?)

```{r}
fit_4 <- lm(mpg~hp + wt + qsec + am, mtcars)
summary(fit_4)
```

-   `hp` 는 빼는 게 나을 것 같은데?

```{r}
fit_5 <- lm(mpg~ wt + qsec + am, mtcars)
summary(fit_5)
```

```{r}
fit <- regsubsets(mpg~., data=mtcars, nbest=1, nvmax=9,
                  # method =c('exhaustive','backward', 'forward','seqrep')
                  method = 'backward'
                  )
```

```{r}
summary(fit)
```

-   후진제거법은 10번째부터 시작해서 거꾸로 올라가는 것.

-   9: `cyl` 라는 변수가 빠지고 9개 사용.

-   8: `cyl` , `vs` 라는 변수가 빠지고 8개 사용.

-   이런식으로 순차적으로 찾아나가는 것이므로, 모든 가능한 회귀와는 결과과 좀 다르게 나온다.

```{r}
with(summary(fit),
     round(cbind(which, rss, rsq, adjr2, cp, bic),3))
```
