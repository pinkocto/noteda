{
  "hash": "aa140645e969d16e4938409ea9f3f7c2",
  "result": {
    "markdown": "---\ntitle: 변수선택 추가 실습\nauthor: JiyunLim\ndate: \"05/12/2023\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaps)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- data.frame(\n x1 = c(7,1,11,11,7,11,3,1,2,21,1,11,10),\n x2 = c(26,29,56,31,52,55,71,31,54,47,40,66,68),\n x3 = c(6,15,8,8,6,9,17,22,18,4,23,9,8),\n x4 = c(60,52,20,47,33,22,6,44,22,26,34,12,12),\n y = c(78.5,74.3,104.3,87.6,95.9,109.2,102.7,72.5,93.1,115.9,83.8,113.3,109.4)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm_full <- lm(y~., dt)\nsummary(m_full)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ ., data = dt)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.1750 -1.6709  0.2508  1.3783  3.9254 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept)  62.4054    70.0710   0.891   0.3991  \nx1            1.5511     0.7448   2.083   0.0708 .\nx2            0.5102     0.7238   0.705   0.5009  \nx3            0.1019     0.7547   0.135   0.8959  \nx4           -0.1441     0.7091  -0.203   0.8441  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.446 on 8 degrees of freedom\nMultiple R-squared:  0.9824,\tAdjusted R-squared:  0.9736 \nF-statistic: 111.5 on 4 and 8 DF,  p-value: 4.756e-07\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(y ~., data=dt, nbest=1, nvmax=9,\n                 # method = c('exhaustive','backward','forward','seqrep')\n                 method = 'exhaustive'\n)\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSubset selection object\nCall: regsubsets.formula(y ~ ., data = dt, nbest = 1, nvmax = 9, method = \"exhaustive\")\n4 Variables  (and intercept)\n   Forced in Forced out\nx1     FALSE      FALSE\nx2     FALSE      FALSE\nx3     FALSE      FALSE\nx4     FALSE      FALSE\n1 subsets of each size up to 4\nSelection Algorithm: exhaustive\n         x1  x2  x3  x4 \n1  ( 1 ) \" \" \" \" \" \" \"*\"\n2  ( 1 ) \"*\" \"*\" \" \" \" \"\n3  ( 1 ) \"*\" \"*\" \" \" \"*\"\n4  ( 1 ) \"*\" \"*\" \"*\" \"*\"\n```\n:::\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n## nbest\n\n`nbest=1` 위의 예제로 예시를 들자면 변수를 1개, 2개, 3개, 4개 썼을 때 제일 좋은 모델을 하나씩 불러오라는 옵션.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(y ~., data=dt, nbest=6, nvmax=9,\n                 # method = c('exhaustive','backward','forward','seqrep')\n                 method = 'exhaustive'\n)\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSubset selection object\nCall: regsubsets.formula(y ~ ., data = dt, nbest = 6, nvmax = 9, method = \"exhaustive\")\n4 Variables  (and intercept)\n   Forced in Forced out\nx1     FALSE      FALSE\nx2     FALSE      FALSE\nx3     FALSE      FALSE\nx4     FALSE      FALSE\n6 subsets of each size up to 4\nSelection Algorithm: exhaustive\n         x1  x2  x3  x4 \n1  ( 1 ) \" \" \" \" \" \" \"*\"\n1  ( 2 ) \" \" \"*\" \" \" \" \"\n1  ( 3 ) \"*\" \" \" \" \" \" \"\n1  ( 4 ) \" \" \" \" \"*\" \" \"\n2  ( 1 ) \"*\" \"*\" \" \" \" \"\n2  ( 2 ) \"*\" \" \" \" \" \"*\"\n2  ( 3 ) \" \" \" \" \"*\" \"*\"\n2  ( 4 ) \" \" \"*\" \"*\" \" \"\n2  ( 5 ) \" \" \"*\" \" \" \"*\"\n2  ( 6 ) \"*\" \" \" \"*\" \" \"\n3  ( 1 ) \"*\" \"*\" \" \" \"*\"\n3  ( 2 ) \"*\" \"*\" \"*\" \" \"\n3  ( 3 ) \"*\" \" \" \"*\" \"*\"\n3  ( 4 ) \" \" \"*\" \"*\" \"*\"\n4  ( 1 ) \"*\" \"*\" \"*\" \"*\"\n```\n:::\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n## nvmax\n\n설명변수의 최대개수를 지정해주는 것. (복잡한 모형이 싫을 때 사용)\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(y ~., data=dt, nbest=6, nvmax=2,\n                 # method = c('exhaustive','backward','forward','seqrep')\n                 method = 'exhaustive'\n)\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSubset selection object\nCall: regsubsets.formula(y ~ ., data = dt, nbest = 6, nvmax = 2, method = \"exhaustive\")\n4 Variables  (and intercept)\n   Forced in Forced out\nx1     FALSE      FALSE\nx2     FALSE      FALSE\nx3     FALSE      FALSE\nx4     FALSE      FALSE\n6 subsets of each size up to 2\nSelection Algorithm: exhaustive\n         x1  x2  x3  x4 \n1  ( 1 ) \" \" \" \" \" \" \"*\"\n1  ( 2 ) \" \" \"*\" \" \" \" \"\n1  ( 3 ) \"*\" \" \" \" \" \" \"\n1  ( 4 ) \" \" \" \" \"*\" \" \"\n2  ( 1 ) \"*\" \"*\" \" \" \" \"\n2  ( 2 ) \"*\" \" \" \" \" \"*\"\n2  ( 3 ) \" \" \" \" \"*\" \"*\"\n2  ( 4 ) \" \" \"*\" \"*\" \" \"\n2  ( 5 ) \" \" \"*\" \" \" \"*\"\n2  ( 6 ) \"*\" \" \" \"*\" \" \"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(y ~., data=dt, nbest=1, nvmax=9,\n                 # method = c('exhaustive','backward','forward','seqrep')\n                 method = 'exhaustive'\n)\n\nwith(summary(fit),\n      round(cbind(which, rss, rsq, adjr2, cp, bic),3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept) x1 x2 x3 x4     rss   rsq adjr2      cp     bic\n1           1  0  0  0  1 883.867 0.675 0.645 138.731  -9.463\n2           1  1  1  0  0  57.904 0.979 0.974   2.678 -42.330\n3           1  1  1  0  1  47.973 0.982 0.976   3.018 -42.211\n4           1  1  1  1  1  47.864 0.982 0.974   5.000 -39.675\n```\n:::\n:::\n\n\n-   `which` : 어떤 변수가 선택되었는지 알려주는 옵션.\n\n### method='backward'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(y ~., data=dt, nbest=1, ## 모든 변수 다 사용시 nvmax 생략가능\n                 # method = c('exhaustive','backward','forward','seqrep')\n                 method = 'backward'\n)\n\nwith(summary(fit),\n      round(cbind(which, rss, rsq, adjr2, cp, bic),3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept) x1 x2 x3 x4     rss   rsq adjr2      cp     bic\n1           1  0  1  0  0 906.336 0.666 0.636 142.486  -9.137\n2           1  1  1  0  0  57.904 0.979 0.974   2.678 -42.330\n3           1  1  1  0  1  47.973 0.982 0.976   3.018 -42.211\n4           1  1  1  1  1  47.864 0.982 0.974   5.000 -39.675\n```\n:::\n:::\n\n\ncp를 기준으로 2번, 3번, 4번 중에 하나 선택하면 된다. 그 중 adjusted R2가 제일 큰 모형을 쓰거나, bic가 제일 작은 모형을 쓰거나 선택을 해서 사용하면 된다.\n\n::: {.callout-tip appearance=\"simple\"}\n## 답안작성 예시\n\n-   adjusted R2기준으로는 3번 모형이 좋고 bic 기준으로는 2번 모형이 좋다. 나는 모형의 적합도 보다는 설명력이 더 필요하다고 생각하기 때문에 3번 모형을 쓰겠다.\n\n-   or 나는 예측의 정확도를 중요시 하기 때문에 2번 모형을 쓰겠다.\n:::\n\n### method ='forward'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(y ~., data=dt, nbest=1, ## 모든 변수 다 사용시 nvmax 생략가능능\n                 # method = c('exhaustive','backward','forward','seqrep')\n                 method = 'forward'\n)\n\nwith(summary(fit),\n      round(cbind(which, rss, rsq, adjr2, cp, bic),3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept) x1 x2 x3 x4     rss   rsq adjr2      cp     bic\n1           1  0  0  0  1 883.867 0.675 0.645 138.731  -9.463\n2           1  1  0  0  1  74.762 0.972 0.967   5.496 -39.008\n3           1  1  1  0  1  47.973 0.982 0.976   3.018 -42.211\n4           1  1  1  1  1  47.864 0.982 0.974   5.000 -39.675\n```\n:::\n:::\n\n\n변수가 3개인 $x_1, x_2, x_4$ 모형이 best model. (cp만족, adjusted R2 제일크고, bic제일 작음.)\n\n## 설명변수가 많은 경우: `mtcars`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t32 obs. of  11 variables:\n $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...\n $ disp: num  160 160 108 258 360 ...\n $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\n $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n $ qsec: num  16.5 17 18.6 19.4 17 ...\n $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n $ am  : num  1 1 1 0 0 0 0 0 0 0 ...\n $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm_full <- lm(mpg ~., data= mtcars)\nsummary(m_full)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mpg ~ ., data = mtcars)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.4506 -1.6044 -0.1196  1.2193  4.6271 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept) 12.30337   18.71788   0.657   0.5181  \ncyl         -0.11144    1.04502  -0.107   0.9161  \ndisp         0.01334    0.01786   0.747   0.4635  \nhp          -0.02148    0.02177  -0.987   0.3350  \ndrat         0.78711    1.63537   0.481   0.6353  \nwt          -3.71530    1.89441  -1.961   0.0633 .\nqsec         0.82104    0.73084   1.123   0.2739  \nvs           0.31776    2.10451   0.151   0.8814  \nam           2.52023    2.05665   1.225   0.2340  \ngear         0.65541    1.49326   0.439   0.6652  \ncarb        -0.19942    0.82875  -0.241   0.8122  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.65 on 21 degrees of freedom\nMultiple R-squared:  0.869,\tAdjusted R-squared:  0.8066 \nF-statistic: 13.93 on 10 and 21 DF,  p-value: 3.793e-07\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- regsubsets(mpg~., data=mtcars, nbest=45, nvmax=9, # total case: (10*9)/2\n                  method = 'exhaustive', really.big=T)\n\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSubset selection object\nCall: regsubsets.formula(mpg ~ ., data = mtcars, nbest = 45, nvmax = 9, \n    method = \"exhaustive\", really.big = T)\n10 Variables  (and intercept)\n     Forced in Forced out\ncyl      FALSE      FALSE\ndisp     FALSE      FALSE\nhp       FALSE      FALSE\ndrat     FALSE      FALSE\nwt       FALSE      FALSE\nqsec     FALSE      FALSE\nvs       FALSE      FALSE\nam       FALSE      FALSE\ngear     FALSE      FALSE\ncarb     FALSE      FALSE\n45 subsets of each size up to 9\nSelection Algorithm: exhaustive\n          cyl disp hp  drat wt  qsec vs  am  gear carb\n1  ( 1 )  \" \" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n1  ( 2 )  \"*\" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n1  ( 3 )  \" \" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n1  ( 4 )  \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n1  ( 5 )  \" \" \" \"  \" \" \"*\"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n1  ( 6 )  \" \" \" \"  \" \" \" \"  \" \" \" \"  \"*\" \" \" \" \"  \" \" \n1  ( 7 )  \" \" \" \"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n1  ( 8 )  \" \" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n1  ( 9 )  \" \" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \" \" \n1  ( 10 ) \" \" \" \"  \" \" \" \"  \" \" \"*\"  \" \" \" \" \" \"  \" \" \n2  ( 1 )  \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 2 )  \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 3 )  \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n2  ( 4 )  \" \" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n2  ( 5 )  \" \" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n2  ( 6 )  \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n2  ( 7 )  \" \" \"*\"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 8 )  \" \" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n2  ( 9 )  \" \" \" \"  \" \" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 10 ) \"*\" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 11 ) \"*\" \" \"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n2  ( 12 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n2  ( 13 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n2  ( 14 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \" \" \n2  ( 15 ) \" \" \"*\"  \"*\" \" \"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 16 ) \" \" \" \"  \"*\" \"*\"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 17 ) \"*\" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 18 ) \"*\" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n2  ( 19 ) \"*\" \" \"  \" \" \"*\"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 20 ) \"*\" \" \"  \" \" \" \"  \" \" \"*\"  \" \" \" \" \" \"  \" \" \n2  ( 21 ) \" \" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \"*\" \n2  ( 22 ) \" \" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n2  ( 23 ) \" \" \"*\"  \" \" \"*\"  \" \" \" \"  \" \" \" \" \" \"  \" \" \n2  ( 24 ) \"*\" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \" \" \n2  ( 25 ) \"*\" \" \"  \" \" \" \"  \" \" \" \"  \"*\" \" \" \" \"  \" \" \n2  ( 26 ) \" \" \"*\"  \" \" \" \"  \" \" \" \"  \"*\" \" \" \" \"  \" \" \n2  ( 27 ) \" \" \"*\"  \" \" \" \"  \" \" \"*\"  \" \" \" \" \" \"  \" \" \n2  ( 28 ) \" \" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \" \" \n2  ( 29 ) \" \" \" \"  \" \" \"*\"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n2  ( 30 ) \" \" \" \"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \"*\" \n2  ( 31 ) \" \" \" \"  \" \" \" \"  \" \" \"*\"  \" \" \"*\" \" \"  \" \" \n2  ( 32 ) \" \" \" \"  \" \" \" \"  \" \" \" \"  \"*\" \"*\" \" \"  \" \" \n2  ( 33 ) \" \" \" \"  \"*\" \" \"  \" \" \"*\"  \" \" \" \" \" \"  \" \" \n2  ( 34 ) \" \" \" \"  \" \" \"*\"  \" \" \" \"  \"*\" \" \" \" \"  \" \" \n2  ( 35 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \"*\" \" \" \" \"  \" \" \n2  ( 36 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n2  ( 37 ) \" \" \" \"  \" \" \"*\"  \" \" \"*\"  \" \" \" \" \" \"  \" \" \n2  ( 38 ) \" \" \" \"  \" \" \" \"  \" \" \" \"  \"*\" \" \" \"*\"  \" \" \n2  ( 39 ) \" \" \" \"  \" \" \" \"  \" \" \"*\"  \" \" \" \" \"*\"  \" \" \n2  ( 40 ) \" \" \" \"  \" \" \"*\"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n2  ( 41 ) \" \" \" \"  \" \" \" \"  \" \" \" \"  \"*\" \" \" \" \"  \"*\" \n2  ( 42 ) \" \" \" \"  \" \" \"*\"  \" \" \" \"  \" \" \" \" \"*\"  \" \" \n2  ( 43 ) \" \" \" \"  \" \" \" \"  \" \" \"*\"  \"*\" \" \" \" \"  \" \" \n2  ( 44 ) \" \" \" \"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \"*\"  \" \" \n2  ( 45 ) \" \" \" \"  \" \" \" \"  \" \" \"*\"  \" \" \" \" \" \"  \"*\" \n3  ( 1 )  \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n3  ( 2 )  \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n3  ( 3 )  \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n3  ( 4 )  \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n3  ( 5 )  \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n3  ( 6 )  \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n3  ( 7 )  \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n3  ( 8 )  \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n3  ( 9 )  \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n3  ( 10 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n3  ( 11 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n3  ( 12 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n3  ( 13 ) \"*\" \"*\"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n3  ( 14 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n3  ( 15 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n3  ( 16 ) \"*\" \" \"  \" \" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n3  ( 17 ) \" \" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \"*\" \n3  ( 18 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \"*\" \n3  ( 19 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n3  ( 20 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n3  ( 21 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \" \" \" \"  \" \" \n3  ( 22 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n3  ( 23 ) \" \" \" \"  \" \" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n3  ( 24 ) \" \" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \"*\" \n3  ( 25 ) \" \" \"*\"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n3  ( 26 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \"*\" \n3  ( 27 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \"*\" \n3  ( 28 ) \"*\" \" \"  \" \" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \"*\" \n3  ( 29 ) \" \" \"*\"  \" \" \"*\"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n3  ( 30 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n3  ( 31 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n3  ( 32 ) \" \" \" \"  \" \" \"*\"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n3  ( 33 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \"*\" \"*\" \" \"  \" \" \n3  ( 34 ) \"*\" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n3  ( 35 ) \" \" \"*\"  \" \" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n3  ( 36 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \" \" \"*\"  \" \" \n3  ( 37 ) \" \" \"*\"  \"*\" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n3  ( 38 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \"*\" \" \"  \"*\" \n3  ( 39 ) \" \" \" \"  \"*\" \"*\"  \" \" \" \"  \" \" \"*\" \" \"  \" \" \n3  ( 40 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \"*\" \n3  ( 41 ) \"*\" \" \"  \" \" \" \"  \" \" \" \"  \" \" \" \" \"*\"  \"*\" \n3  ( 42 ) \" \" \" \"  \"*\" \" \"  \" \" \" \"  \" \" \"*\" \"*\"  \" \" \n3  ( 43 ) \" \" \" \"  \"*\" \" \"  \" \" \"*\"  \" \" \"*\" \" \"  \" \" \n3  ( 44 ) \"*\" \"*\"  \" \" \" \"  \" \" \" \"  \" \" \" \" \" \"  \"*\" \n3  ( 45 ) \" \" \"*\"  \" \" \" \"  \" \" \"*\"  \" \" \" \" \" \"  \"*\" \n4  ( 1 )  \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n4  ( 2 )  \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n4  ( 3 )  \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n4  ( 4 )  \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n4  ( 5 )  \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n4  ( 6 )  \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n4  ( 7 )  \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n4  ( 8 )  \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n4  ( 9 )  \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n4  ( 10 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n4  ( 11 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n4  ( 12 ) \"*\" \" \"  \" \" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n4  ( 13 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \"*\" \n4  ( 14 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n4  ( 15 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n4  ( 16 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n4  ( 17 ) \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n4  ( 18 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \"*\" \n4  ( 19 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \"*\" \n4  ( 20 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n4  ( 21 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n4  ( 22 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n4  ( 23 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n4  ( 24 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \"*\" \n4  ( 25 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n4  ( 26 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \" \" \" \"  \"*\" \n4  ( 27 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n4  ( 28 ) \"*\" \"*\"  \" \" \" \"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n4  ( 29 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \" \" \" \"  \"*\" \n4  ( 30 ) \"*\" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n4  ( 31 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \"*\" \" \" \" \"  \" \" \n4  ( 32 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n4  ( 33 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \" \" \n4  ( 34 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \" \" \" \"  \" \" \n4  ( 35 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n4  ( 36 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \" \" \"*\"  \" \" \n4  ( 37 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n4  ( 38 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n4  ( 39 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n4  ( 40 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n4  ( 41 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n4  ( 42 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \"*\" \" \" \" \"  \" \" \n4  ( 43 ) \" \" \"*\"  \" \" \"*\"  \" \" \" \"  \" \" \"*\" \" \"  \"*\" \n4  ( 44 ) \" \" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n4  ( 45 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n5  ( 1 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n5  ( 2 )  \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n5  ( 3 )  \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n5  ( 4 )  \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n5  ( 5 )  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n5  ( 6 )  \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n5  ( 7 )  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n5  ( 8 )  \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n5  ( 9 )  \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n5  ( 10 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n5  ( 11 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n5  ( 12 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n5  ( 13 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n5  ( 14 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n5  ( 15 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n5  ( 16 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n5  ( 17 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n5  ( 18 ) \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n5  ( 19 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n5  ( 20 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n5  ( 21 ) \"*\" \" \"  \" \" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n5  ( 22 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n5  ( 23 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \"*\" \n5  ( 24 ) \"*\" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n5  ( 25 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n5  ( 26 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n5  ( 27 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \" \" \n5  ( 28 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n5  ( 29 ) \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \"*\" \n5  ( 30 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \" \" \n5  ( 31 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n5  ( 32 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n5  ( 33 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n5  ( 34 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \"*\" \n5  ( 35 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \" \" \"*\"  \"*\" \n5  ( 36 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n5  ( 37 ) \"*\" \" \"  \" \" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \"*\" \n5  ( 38 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \"*\"  \"*\" \n5  ( 39 ) \"*\" \"*\"  \" \" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n5  ( 40 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \" \"  \" \" \n5  ( 41 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \" \" \n5  ( 42 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \" \" \" \"  \"*\" \n5  ( 43 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n5  ( 44 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n5  ( 45 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \" \" \n6  ( 1 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n6  ( 2 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n6  ( 3 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n6  ( 4 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n6  ( 5 )  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n6  ( 6 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n6  ( 7 )  \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n6  ( 8 )  \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n6  ( 9 )  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n6  ( 10 ) \"*\" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n6  ( 11 ) \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n6  ( 12 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n6  ( 13 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n6  ( 14 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n6  ( 15 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n6  ( 16 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n6  ( 17 ) \" \" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n6  ( 18 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n6  ( 19 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n6  ( 20 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n6  ( 21 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n6  ( 22 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n6  ( 23 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n6  ( 24 ) \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n6  ( 25 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n6  ( 26 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n6  ( 27 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n6  ( 28 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n6  ( 29 ) \" \" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n6  ( 30 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n6  ( 31 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n6  ( 32 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n6  ( 33 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n6  ( 34 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n6  ( 35 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \"*\" \n6  ( 36 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n6  ( 37 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n6  ( 38 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n6  ( 39 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \"*\" \n6  ( 40 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \" \" \n6  ( 41 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \" \" \n6  ( 42 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n6  ( 43 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \" \" \n6  ( 44 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n6  ( 45 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n7  ( 1 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n7  ( 2 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \" \" \n7  ( 3 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n7  ( 4 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n7  ( 5 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n7  ( 6 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n7  ( 7 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n7  ( 8 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n7  ( 9 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n7  ( 10 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n7  ( 11 ) \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n7  ( 12 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n7  ( 13 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n7  ( 14 ) \" \" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 15 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n7  ( 16 ) \"*\" \" \"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n7  ( 17 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n7  ( 18 ) \" \" \" \"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 19 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n7  ( 20 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n7  ( 21 ) \"*\" \" \"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n7  ( 22 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n7  ( 23 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n7  ( 24 ) \"*\" \" \"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 25 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n7  ( 26 ) \" \" \"*\"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 27 ) \" \" \" \"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 28 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n7  ( 29 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n7  ( 30 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n7  ( 31 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \" \" \n7  ( 32 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n7  ( 33 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \" \" \n7  ( 34 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n7  ( 35 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \" \" \n7  ( 36 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \"*\" \n7  ( 37 ) \"*\" \" \"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 38 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \"*\"  \"*\" \n7  ( 39 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n7  ( 40 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n7  ( 41 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \" \"  \"*\" \n7  ( 42 ) \" \" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n7  ( 43 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n7  ( 44 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n7  ( 45 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \" \" \"*\" \"*\"  \"*\" \n8  ( 1 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n8  ( 2 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n8  ( 3 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \" \" \n8  ( 4 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \" \" \n8  ( 5 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \" \"  \"*\" \n8  ( 6 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n8  ( 7 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n8  ( 8 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n8  ( 9 )  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 10 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n8  ( 11 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n8  ( 12 ) \" \" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 13 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n8  ( 14 ) \"*\" \" \"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 15 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n8  ( 16 ) \"*\" \" \"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 17 ) \" \" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 18 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n8  ( 19 ) \"*\" \"*\"  \" \" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 20 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \" \"  \"*\" \n8  ( 21 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 22 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 23 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 24 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \" \" \"*\"  \"*\" \n8  ( 25 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n8  ( 26 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \"*\"  \" \" \n8  ( 27 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \" \"*\"  \" \" \n8  ( 28 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \" \" \"*\" \"*\"  \"*\" \n8  ( 29 ) \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \" \"*\"  \"*\" \n8  ( 30 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n8  ( 31 ) \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \" \" \"*\"  \"*\" \n8  ( 32 ) \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \" \"*\"  \"*\" \n8  ( 33 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \" \" \"*\"  \"*\" \n8  ( 34 ) \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \" \" \"  \"*\" \n8  ( 35 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \" \" \"*\"  \"*\" \n8  ( 36 ) \"*\" \"*\"  \" \" \"*\"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 37 ) \" \" \"*\"  \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 38 ) \"*\" \"*\"  \"*\" \"*\"  \" \" \" \"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 39 ) \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\"  \" \" \"*\" \"*\"  \"*\" \n8  ( 40 ) \"*\" \"*\"  \" \" \"*\"  \" \" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 41 ) \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\" \" \"  \"*\" \n8  ( 42 ) \"*\" \"*\"  \"*\" \" \"  \" \" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 43 ) \"*\" \" \"  \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n8  ( 44 ) \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\"  \"*\" \" \" \"*\"  \"*\" \n8  ( 45 ) \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\" \"*\"  \" \" \n9  ( 1 )  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n9  ( 2 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\" \"*\"  \"*\" \n9  ( 3 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \" \" \n9  ( 4 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \" \"  \"*\" \n9  ( 5 )  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n9  ( 6 )  \"*\" \" \"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n9  ( 7 )  \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n9  ( 8 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \"  \"*\" \"*\" \"*\"  \"*\" \n9  ( 9 )  \"*\" \"*\"  \"*\" \"*\"  \"*\" \"*\"  \"*\" \" \" \"*\"  \"*\" \n9  ( 10 ) \"*\" \"*\"  \"*\" \"*\"  \" \" \"*\"  \"*\" \"*\" \"*\"  \"*\" \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}